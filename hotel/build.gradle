plugins {
    id 'com.android.application'
}

android {
    signingConfigs {
        re {
            storeFile file('..\\hotel\\new_lottery_system_puzekeji.jks')
            storePassword 'puzekeji'
            keyAlias 'puzekeji'
            keyPassword 'puzekeji'
        }
        debug {
            storeFile file('..\\hotel\\new_lottery_system_puzekeji.jks')
            storePassword 'puzekeji'
            keyAlias 'puzekeji'
            keyPassword 'puzekeji'
        }
    }
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        applicationId "com.chucai.hotel"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 2
        versionName "2.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.re
        ndk {
//            moduleName "ndk_ser" //模块名，需要和System.loadLibrary("xxx");中的xxx保持一致，必现一致
            abiFilters "armeabi" //平台支持，java是跨平台语言，C语言不是，这里添加的是支持的平台
        }
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }

}
configurations.all {
    resolutionStrategy {
        force "com.android.support:appcompat-v7:28.0.0"
        // force "com.android.support:support-v4:27.1.1"
    }
}
dependencies {

    implementation  project(':F1_api')
    implementation  project(':xtflib')
    implementation  project(':library_adapter')
//    implementation  project(':facesdk')
    implementation project( ':faceplatform-ui')
    compile project(path: ':faceplatform-release')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.github.donkingliang:CustomBanner:1.1.3'
    implementation 'com.github.bumptech.glide:glide:3.8.0'
    implementation fileTree(dir:'libs', include: ['*.jar','*.aar'])
    implementation 'org.litepal.android:core:1.6.1'
    implementation 'com.alibaba:fastjson:1.2.10'
    implementation 'com.android.support:recyclerview-v7:26.0.0'
    implementation 'com.github.bumptech.glide:glide:3.5.2'
    implementation 'com.android.support:multidex:1.0.0'
    implementation files('libs\\usb.jar')
    compile 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testng:testng:6.9.6'
    androidTestImplementation 'junit:junit:4.12'
    //api(name:'autoreplyprint', ext:'aar')


}



preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }

    }
}